name: Liquibase with GitHub Actions Demo
on: 
  workflow_dispatch
jobs:
  liquibase-actions:
    name: Liquibase Actions
    runs-on: ubuntu-latest
    env: 
        LB_TAG: ${{ github.run_number }}
        LIQUIBASE_COMMAND_CHANGELOG_FILE: liquibase/changelogs/changelog.sql
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_USER: ${{ secrets.LIQUIBASE_DEV_USER }}
          POSTGRES_PASSWORD: ${{ secrets.LIQUIBASE_DEV_PASSWORD }}
          POSTGRES_DB: ${{ secrets.LIQUIBASE_DEV_DB }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run Liquibase Status
        id: liquibase-status
        uses: liquibase-github-actions/status@v4.29.2
        with:
          changelogFile: ${{ env.LIQUIBASE_COMMAND_CHANGELOG_FILE }}
          url: ${{ secrets.LIQUIBASE_DEV_URL }}
          username: ${{ secrets.LIQUIBASE_DEV_USER }}
          password: ${{ secrets.LIQUIBASE_DEV_PASSWORD }}
          headless: true
          logLevel: INFO
      - name: Run Liquibase update-sql
        id: liquibase-updatesql
        uses: liquibase-github-actions/update-sql@v4.29.2
        with:
          changelogFile: ${{ env.LIQUIBASE_COMMAND_CHANGELOG_FILE }}
          url: ${{ secrets.LIQUIBASE_DEV_URL }}
          username: ${{ secrets.LIQUIBASE_DEV_USER }}
          password: ${{ secrets.LIQUIBASE_DEV_PASSWORD }} 
          headless: true
          logLevel: INFO
      - name: Run Liquibase Tag
        id: liquibase-tag
        uses: liquibase-github-actions/tag@v4.29.2
        with:
          tag: ${{ env.LB_TAG }}
          changelogFile: ${{ env.LIQUIBASE_COMMAND_CHANGELOG_FILE }}
          url: ${{ secrets.LIQUIBASE_DEV_URL }}
          username: ${{ secrets.LIQUIBASE_DEV_USER }}
          password: ${{ secrets.LIQUIBASE_DEV_PASSWORD }}    
          headless: true
          logLevel: INFO
      - name: Run Liquibase update
        id: liquibase-update
        uses: liquibase-github-actions/update@v4.29.2
        with:
          changelogFile: ${{ env.LIQUIBASE_COMMAND_CHANGELOG_FILE }}
          url: ${{ secrets.LIQUIBASE_DEV_URL }}
          username: ${{ secrets.LIQUIBASE_DEV_USER }}
          password: ${{ secrets.LIQUIBASE_DEV_PASSWORD }}      
          headless: true
          logLevel: INFO
      - name: Rollback
        id: liquibase-urollback
        uses: liquibase-github-actions/rollback@v4.29.2
        with:
          changelogFile: ""
          tag: ${{ env.LB_TAG }}
          url: ""
          headless: true
          logLevel: INFO
      - name: Run Liquibase update
        id: liquibase-update-after-rollback
        uses: liquibase-github-actions/update@v4.29.2
        with:
          changelogFile: ${{ env.LIQUIBASE_COMMAND_CHANGELOG_FILE }}
          url: ${{ secrets.LIQUIBASE_DEV_URL }}
          username: ${{ secrets.LIQUIBASE_DEV_USER }}
          password: ${{ secrets.LIQUIBASE_DEV_PASSWORD }}      
          headless: true
          logLevel: INFO
      - name: Run Liquibase update
        id: liquibase-rollback-one-changeset
        uses: liquibase-github-actions/rollback-one-changeset@v4.29.2
        with:
          changelogFile: ${{ env.LIQUIBASE_COMMAND_CHANGELOG_FILE }}
          changesetAuthor: "other.dev"
          changesetId: "3"
          headless: true
          licenseKey: ${{ secrets.LIQUIBASE_LICENSE_KEY }}
          logLevel: INFO